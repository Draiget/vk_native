using System.Text;
using vk.gen.spec.utils;

namespace vk.gen.spec.code;

internal abstract class SpecCodeWriterBase
{
    protected string FileName { get; }

    private readonly StringBuilder _sb;
    private int _indention;

    protected SpecCodeWriterBase(string fileName) {
        FileName = fileName;
        _sb = new StringBuilder();
        _indention = 0;
    }

    public void WriteIndention() {
        if (_indention <= 0) {
            return;
        }

        _sb.Append(new string('\t', _indention));
    }

    public void WriteLine(string text) {
        WriteIndention();
        _sb.Append($"{text}\n");
    }

    public void PushBlock() {
        _indention++;
    }

    public void PopBlock() {
        _indention--;
    }

    public void WriteDefaultHeader() {
        WriteSingleComment("This file is automatically generated, do not edit");
    }

    public void WriteSingleComment(string text) {
        WriteIndention();
        _sb.Append($"// {text}\n");
    }

    public void BeginComment() {
        WriteIndention();
        _sb.Append("/// <summary>\n");
    }

    public void EndComment() {
        WriteIndention();
        _sb.Append("/// </summary>\n");
    }

    public void WriteComment(string text) {
        WriteLine($"/// {text}");
    }

    public void WriteNamespace(string ns) {
        _sb.Append($"\nnamespace {ns};\n\n");
    }

    public string Generate() {
        return _sb.ToString();
    }

    public string GetFileName() {
        return $"{FileName}.Gen";
    }

    public abstract void Begin();

    public abstract void End();
}
